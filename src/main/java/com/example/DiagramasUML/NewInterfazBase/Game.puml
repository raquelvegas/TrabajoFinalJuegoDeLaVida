@startuml
class com.example.NewInterfaz.Game {
+ GridPane tableroGrid
+ {static} Tablero tablero
- boolean game
- ControllerMainStage controller
- {static} Logger log
+ ListaEnlazada<Square> generarEnlazadaSquares()
- void addEventHandlers(GridPane)
- void handleCeldaClick(Square)
- double getVidasCeldas(Square,int,Double,ListaSimple<Individuo>,ListaSimple<Recurso>)
- void handleSquareClick(int,int,Square)
- void addIndividuo(Square)
- void addRecursos(Square,Double)
- int addTipo(Square,Double)
+ void actualizarTablero()
- void actualizarSquare(Square)
- void actualizarCelda(Celda)
+ void clearTablero(Tablero)
+ void crearTableroAleatorio()
- void aparicionRecursos()
- int celdaAleatoria(Square)
+ void actualizarIndividuos()
- void clearIndividuos()
+ void eliminarRecursos()
- void eliminarRecursos(ListaSimple<Recurso>)
+ void eliminarIndividuos()
- void eliminarIndividuos(ListaSimple<Individuo>)
+ void actualizarVidas()
+ void consumirRecursos()
- void consumirAgua(Individuo,Recurso)
- void consumirComida(Individuo,Recurso)
- void consumirMontana(Individuo,Recurso)
- void consumirBiblioteca(Individuo,Recurso)
- void consumirTesoro(Individuo,Recurso)
- void reproduccion()
- void clonacion()
- void limpiezaAglomeraciones()
+ void moverIndividuos()
- void moverIndividuosCuadrado(ListaSimple<Square>,Square,ListaSimple<Integer>)
- void moverIndAvanzado(Square,IndAvanzado)
- void moverIndAvanzadoDirigido(IndAvanzado)
- void buscarRecorridoAvanzado(Square,IndAvanzado)
- Grafo<Square> crearGrafoTablero()
- int calcularPesoArista(Square)
- int a√±adirPesoObstaculo(int,Square)
- void moverIndBasico(Square,ListaSimple<Square>,Individuo)
- void moverIndNormal(ListaSimple<Square>,Square,Individuo)
- void buscarNuevoObjetivo(ListaSimple<Square>,Square,IndNormal)
- void moverIndNormalDirigido(ListaEnlazada<Square>,IndNormal)
- boolean individuoYaMovido(Individuo,ListaSimple<Integer>)
- int posicionCuadrado(Square)
- int generarEnteroAleatorio(int,int)
- double generarDoubleAleatorio(double,double)
- void moverIndBasicoCuadradoInterior(ListaSimple<Square>,Square,Individuo,Integer)
- void moverIndBasicoCuadradoEsquina(ListaSimple<Square>,Square,Individuo,Integer,int)
- void moverIndBasicoCuadradoBorde(ListaSimple<Square>,Square,Individuo,Integer,int)
+ void actualizarProbabilidades()
+ {static} Tablero getTablero()
+ GridPane getTableroGrid()
+ void turno()
}


@enduml